#!/usr/bin/env python3

import time
import tornado
import tornado.web
import tornado.httpserver
import tornado.ioloop
import tornado.gen
import sys

import thriftpy
import thriftpy.tornado
thriftpy.install_import_hook()
import ediplug_thrift


def log(*args, **kwargs):
	print("frontend:", *args, **kwargs)
	sys.stdout.flush()

class EdiplugServer(tornado.web.RequestHandler):

	def __init__(self, *args, **kwargs):
		super().__init__(*args, **kwargs)
		self.ioloop = tornado.ioloop.IOLoop.current()

	@tornado.gen.coroutine
	def get(self):
		end = time.time()
		dayInSeconds = 24*60*60
		begin = end - dayInSeconds
		begin_ = ediplug_thrift.Timepoint(begin)
		end_ = ediplug_thrift.Timepoint(end)
		client = yield thriftpy.tornado.make_client(
			ediplug_thrift.Ediplug, '127.0.0.1', 6000)
		measurements = yield client.getConsumptionBetween(begin_, end_)
		client.close()
		measurements.sort(
			key=lambda measurement: measurement.timepoint.epoch)
		self.write("Measurements begin:<br>")
		for measurement in measurements:
			self.write(
				measurement.plugName+
				": "+
				str(measurement.timepoint.epoch)+
				": "+
				str(measurement.consumption.watts)+
				"W<br>")
		self.write("Measurements end<br>")



def main():
	log("Starting web server")
	application = tornado.web.Application(
			[(r"/", EdiplugServer)])
	application.listen(8888)
	tornado.ioloop.IOLoop.current().start()

if __name__ == "__main__":
	main()
